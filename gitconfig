[user]
	email = monry84@gmail.com
	name = Tetsuya Mori
[core]
	editor = vim
	precomposeunicode = true
	excludesfile = /Users/monry/.gitignore_global
	commentchar = ";"
[commit]
	template = ~/.gitmessage
[color]
	diff = auto
	status = auto
	branch = auto
[alias]
	a = add
	s = status
	i = "commit --allow-empty -v"
	c = checkout
	sw = switch
	b = branch
	m = "merge --no-ff"
	d = diff
	f = "fetch --tags"
	t = tag
	g = grep
	pl = pull
	ps = !git push -u origin `git rev-parse --abbrev-ref HEAD` --tags
	rp = !git remote prune origin
	rf = !"f() { if [ -z \"$1\" ]; then ORIGINAL_BRANCH=master; else ORIGINAL_BRANCH=$1; fi && CURRENT_BRANCH=`git rev-parse --abbrev-ref HEAD` && git fetch origin $ORIGINAL_BRANCH:$ORIGINAL_BRANCH && git fetch origin && git checkout $ORIGINAL_BRANCH && git remote prune origin && git branch -d $CURRENT_BRANCH; }; f"
	full-push = !git push --all && git push --tags
	lc = !git lfs checkout
	lf = !git lfs fetch
	lcl = !git lfs clone
	lpl = !git lfs pull
	lps = !git lfs push
	pr = !hub pull-request
	br = !hub browse
	re = !hub release
	hash = !git rev-parse HEAD | tr -d '\n'
	ha = !git rev-parse HEAD | tr -d '\n' | pbcopy
	checkout-with-lfs = "!f() { git lfs install --force --skip-smudge && git checkout $1 && git lfs pull && git lfs install --force; }; f"
	pull-with-lfs = "!f() { git lfs install --force --skip-smudge && git pull && git lfs pull && git lfs install --force; }; f"
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
[init]
	templatedir = ~/.git_template
[credential "https://source.developers.google.com"]
	helper = gcloud.sh
